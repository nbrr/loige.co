{"componentChunkName":"component---src-templates-tag-index-js","path":"/tag/library/","result":{"data":{"site":{"siteMetadata":{"title":"Luciano Mammino \"Loige\" - Cloud developer, entrepreneur, fighter, butterfly maker!"}}},"pageContext":{"posts":[{"timeToRead":5,"excerpt":"Short URLs have been an invaluable tool for social media marketing for so many years and we are now used to seeing them everywhere. Most of the credit probably goes to URL shorteners services like Bit.ly, Goo.gl, YOURLS and Rebrandly that popularised the concept and made easy for everyone to start creating short URLs. When working with URLs in some automation scenarios like analytics, information crawling, data retrieval, etc. it can be important to resolve (or ”unshorten” or ”expand”) short URLs, which…","fields":{"slug":"unshorten-expand-short-urls-with-node-js"},"frontmatter":{"date":"31 March, 2017","title":"Unshorten (expand) short URLs with Node.js","tags":["node-js","library","javascript"],"header_img":{"publicURL":"/static/e07488375392b5fa7699f59677bf5b9a/unshorten-expand-short-urls-with-node-js-loige-compressed.jpg"}}},{"timeToRead":4,"excerpt":"Gulp-cozy is an experimental NPM package that allows you to organize your Gulp tasks in a more modular way with simplicity and “cozyness” in mind.  Rationale Ever found yourself digging into a gigantic monstrous Gulpfile with hundreds\nof functions and tasks scattered all around? If it happened to you I am sure you can tell that it’s not a great feeling… That’s the reason why I created this small module as an attempt to help with keeping yourself cozier (and happier!) when working with Gulp.\nIn a way it…","fields":{"slug":"introducing-gulp-cozy-manage-your-gulp-tasks-in-a-cozier-way"},"frontmatter":{"date":"18 January, 2016","title":"Introducing Gulp cozy - Manage your gulp tasks in a cozier way","tags":["gulp","javascript","node-js","library"],"header_img":{"publicURL":"/static/789f6253df634fd764a674d28a284ee3/meerkat-459171_1920.jpg"}}},{"timeToRead":3,"excerpt":"A couple of days ago I had the need to store the MongoDB connection string for a Node.js application I am currently building.\nOf course it was not a big deal and at first I stored it in a file.\nAnyway at some point I realised that I would needed to override parts of this string to change some settings in production (e.g. adding replicas and authentication settings).\nFor this sake it would have been nice to have a way to store this configuration as a “well organised” object and then override just the…","fields":{"slug":"introducing-mongo-uri-builder-a-nodejs-module-to-easily-create-mongodb-connection-strings-using-objects"},"frontmatter":{"date":"29 September, 2015","title":"Introducing mongo-uri-builder, a Node.js module to easily create mongodb connection strings using objects","tags":["node-js","library","mongodb","github"],"header_img":{"publicURL":"/static/2631a85bd72a9afcb89633ddc1e4af8d/mongo-uri-builder-article-sample-image.jpg"}}},{"timeToRead":7,"excerpt":"In my previous post I introduced my latest library PHPoAuthUserData that allows to abstract the process of\nextracting user profile data from various OAuth providers (Facebook, Twitter, Linkedin, etc). The library still need a lot of work, especially to write the logic to extract data from all the services available in the parent OAuth library. At the moment the library supports only the most common OAuth providers. I would be glad to support all the following services: Amazon, BitBucket, BitLy, Box…","fields":{"slug":"writing-a-new-extractor-for-php-oauth-user-data"},"frontmatter":{"date":"10 February, 2014","title":"Writing a new Extractor for PHPoAuthUserData","tags":["library","php","oauth","instagram","github"],"header_img":{"publicURL":"/static/2b7feb53d0157af72b99ac387c4eaa0a/writing-a-new-extractor-for-php-oauth-user-data.png"}}},{"timeToRead":2,"excerpt":"I recently wrote a new PHP library to simplify the extraction of user data (name, email, id, etc…) from various OAuth providers such as Facebook, Twitter and Linkedin. Is well know that OAuth 1 and 2 are great standard protocols to authenticate users in our apps. Anyway we often need to go further the authentication process and extract various information about the authenticated users. Unfortunately this is something that is not standardized and obviously each OAuth provider manages user data in very…","fields":{"slug":"new-php-library-php-oauth-user-data"},"frontmatter":{"date":"10 February, 2014","title":"New PHP library: PHPoAuthUserData","tags":["library","php","oauth","github"],"header_img":{"publicURL":"/static/ddcc163ff1c49cc9df72dc028b58e5a7/new-php-library-php-oauth-user-data.png"}}}],"tag":"library"}},"staticQueryHashes":[]}