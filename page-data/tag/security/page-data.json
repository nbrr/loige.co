{"componentChunkName":"component---src-templates-tag-index-js","path":"/tag/security/","result":{"data":{"site":{"siteMetadata":{"title":"Luciano Mammino \"Loige\" - Cloud developer, entrepreneur, fighter, butterfly maker!"}}},"pageContext":{"posts":[{"timeToRead":17,"excerpt":"Recently at Planet 9 Energy, I had to setup a VPN access to secure some of our internal services. One of the requirements was to make the provisioning easy to reproduce over multiple environments, so we ended up playing a bit with Terraform, while obviously adopting OpenVPN for the VPN server. Another important requirement was to expose the OpenVPN web interface (also called Access Server) using an SSL, which I was expecting to be one of the most challenging things to automate, instead, it turned out to be‚Ä¶","fields":{"slug":"using-lets-encrypt-and-certbot-to-automate-the-creation-of-certificates-for-openvpn"},"frontmatter":{"date":"19 June, 2017","title":"Using Let‚Äôs Encrypt and Certbot to automate the creation of certificates for OpenVPN","tags":["ssl","web","terraform","security","aws"],"header_img":{"publicURL":"/static/45dfcbcf12ab7cac8a20f867207af385/using-lets-encrypt-and-certbot-to-automate-the-creation-of-certificates-for-openvpn-loige-icover-image.jpg"}}},{"timeToRead":3,"excerpt":"Hello dear developers,\ntoday I finally got my invitation to access the private beta of Keybase.io! üòé üéâ\nFor those who are not aware of this new service, Keybase.io is a website and a command line application that makes easier to adopt asymmetric cryptography to encrypt and authenticate messages. But it‚Äôs not just this, it‚Äôs also a ‚Äúdirectory of people‚Äù, as they like to say. It‚Äôs like a social network, where everyone can easily share its public key and attach it to its social profiles (like Twitter, Github‚Ä¶","fields":{"slug":"8-invitations-to-try-keybase-io"},"frontmatter":{"date":"26 May, 2015","title":"8 invitations to try Keybase.io","tags":["security","cryptography"],"header_img":{"publicURL":"/static/f86f086dfbd40709f8691bf576ea501a/8-invitations-to-try-keybase-io.jpg"}}},{"timeToRead":2,"excerpt":"Few days ago I learned an interesting trick that allows you to reset the password on a MySql server. This trick is pretty useful in case you have lost (or you haven‚Äôt ever had) the password of your MySql root user. You just need to throw some commands at the console. Note that I am assuming you are using Ubuntu or some other Debian derivate. Otherwise the commands may change a bit (but not to much I believe).  1. Stop the mysql daemon 2. Disable the security checks The mysqld_safe command will essentially‚Ä¶","fields":{"slug":"reset-your-mysql-server-password"},"frontmatter":{"date":"30 March, 2014","title":"Reset your MySql server password","tags":["security","mysql","server"],"header_img":{"publicURL":"/static/8ecbcf4197f4bf2923cd233288a6171a/reset-your-mysql-server-password.png"}}},{"timeToRead":4,"excerpt":"The Symfony2 security component has the fame of being one of the most complex in the framework. I tend to believe that‚Äôs partially true, not because the component is really that complex, but because there are (really) a lot of concepts involved and it may be difficult to understand them all at once and have a clear vision as a whole. I am in the process of writing an OAuth bundle and I faced the need to deeply understand how the authentication process work in Symfony2 to being able to integrate the OAuth‚Ä¶","fields":{"slug":"symfony-security-authentication-made-simple"},"frontmatter":{"date":"14 February, 2014","title":"Symfony security: authentication made simple (well, maybe!)","tags":["php","symfony","security"],"header_img":{"publicURL":"/static/a049b3af819a1ab8374e1dacde3d8e4f/symfony-security-authentication-made-simple.png"}}}],"tag":"security"}},"staticQueryHashes":[]}