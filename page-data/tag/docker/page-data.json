{"componentChunkName":"component---src-templates-tag-index-js","path":"/tag/docker/","result":{"data":{"site":{"siteMetadata":{"title":"Luciano Mammino \"Loige\" - Cloud developer, entrepreneur, fighter, butterfly maker!"}}},"pageContext":{"posts":[{"timeToRead":12,"excerpt":"In this article I will show my setup to build and share web apps prototypes using Fastify and Preact, two technologies that I love. I will also use htm, a library that can be easily integrated with Preact to define DOM elements in a very expressive and react-like way (like JSX), without having to use transpilers like Babel. Finally we will see how to dockerize a sample app built with this setup. This will make the app easy to share with co-workers and friends. I came up with this stack, few weeks ago when I…","fields":{"slug":"fastify-and-preact-for-quick-web-app-prototyping"},"frontmatter":{"date":"18 February, 2019","title":"Fastify and Preact for quick web app prototyping","tags":["javascript","node-js","fastify","react","docker"],"header_img":{"publicURL":"/static/a842c94d30f4087735ab1ad47fcb60de/fastify-and-preact-for-quick-web-app-prototyping.jpg"}}},{"timeToRead":9,"excerpt":"In this post we will see how to write a (very) simple Go server app and how to put it into a Docker container and run it.  Disclaimer: I’m an absolute beginner with both Go and Docker and this is just an experiment I did to start to explore this two interesting technologies. If you’ll find something weird or wrong you are very encouraged to scream at me in the comments (Comments), I will be extremely thankful ;) Introduction We are going to write a simple echo server in Go and then we will pack it into a…","fields":{"slug":"simple-echo-server-written-in-go-dockerized"},"frontmatter":{"date":"29 June, 2014","title":"Simple echo server written in Go, dockerized!","tags":["server","go","docker"],"header_img":{"publicURL":"/static/d501b84eb19ffd911014f65477f60813/simple-echo-server-written-in-go-dockerized.jpg"}}}],"tag":"docker"}},"staticQueryHashes":[]}