{"componentChunkName":"component---src-templates-tag-index-js","path":"/tag/symfony/","result":{"data":{"site":{"siteMetadata":{"title":"Luciano Mammino \"Loige\" - Cloud developer, entrepreneur, fighter, butterfly maker!"}}},"pageContext":{"posts":[{"timeToRead":17,"excerpt":"In this post I will try to highlight some of the most common principles that you have to take under consideration when you want to achieve a great level of performance while building a web application (specifically on the backend part). I believe the concepts discussed here can be applied to any language and framework even if, due to my specific experience, I will mention some examples, design patterns, conventions and tools that are mostly used in the PHP world. You can read this article in other languages…","fields":{"slug":"6-rules-of-thumb-to-build-blazing-fast-web-applications"},"frontmatter":{"date":"25 July, 2015","title":"6 Rules of thumb to build blazing fast web server applications","tags":["php","symfony","laravel","performance","scalability"],"header_img":{"publicURL":"/static/d9b9a66ae929c0ee6b10053525036ec5/6-rules-of-thumb-to-build-blazing-fast-web-applications-flash-gordon-1.jpg"}}},{"timeToRead":5,"excerpt":"One of the things I like most of the Symfony framework is its Http Kernel component. Not only it does offer a very straightforward abstraction to handle requests and responses in an object-oriented way but it also allows you to interact with the whole response generation process through events.  This approach is very convenient and flexible and in fact the Http Kernel component is the foundation of the Symfony framework but also of several other famous frameworks (Silex, Laravel) and CMSes (Drupal, BackBee…","fields":{"slug":"symfony-edit-the-response-globally-using-the-kernel-response-event"},"frontmatter":{"date":"21 February, 2015","title":"Symfony, edit the Response globally using the Kernel Response event","tags":["php","symfony","http"],"header_img":{"publicURL":"/static/6ac1c6c77e2d54cb09869c500106341d/symfony-edit-the-response-globally-using-the-kernel-response-event.jpg"}}},{"timeToRead":6,"excerpt":"If you have ever heard about ”transparent pixel”, ”1x1 blank pixel”, ”tracking pixel” or simply ”tracking image” you probably know what we are going to talk about and can just skip to the implementation! Introduction Transparent pixel image is a technique often used to track some user behavior (often visits or views to a certain online content) in scenarios where you can’t use javascript. One of the most common scenarios is probably email opening tracking. Can you put Google Analytics into an email? Well…","fields":{"slug":"transparent-pixel-response-with-symfony-how-to-track-email-opening"},"frontmatter":{"date":"13 June, 2014","title":"Transparent pixel response with Symfony, how to track email opening","tags":["php","symfony","http","tracking","email"],"header_img":{"publicURL":"/static/acd6bcc08670aa3afeb2e66f58deae5f/transparent-pixel-response-with-symfony-how-to-track-email-opening.jpg"}}},{"timeToRead":8,"excerpt":"In this article I will show you how to set up a stand alone command line application by using the Symfony Console component and Pimple.  Writing console commands for Symfony (full stack framework) is easy and enjoyable. It helps a lot when you need to handle particular collateral tasks that are needed, in a way or another, to make your website running (processing and crunching data, make async requests, create reports, etc.). Anyway I discovered that writing stand alone command line applications using only…","fields":{"slug":"write-a-console-application-using-symfony-and-pimple"},"frontmatter":{"date":"15 March, 2014","title":"Write a console application using Symfony and Pimple","tags":["php","symfony","console","pimple"],"header_img":{"publicURL":"/static/91044114dc4bd9465a594a9032eb4924/write-a-console-application-using-symfony-and-pimple.png"}}},{"timeToRead":3,"excerpt":"Recently I had the need to run a twig template that uses the trans filter on my frontend using twig.js, a pure JavaScript port of twig written by the good Johannes Schmitt.\nThe JavaScript version does not handle all the functionalities offered by the original PHP version (even if it goes pretty close) and in particular it does not natively handle the trans filter. So, at first, I got a JavaScript runtime exception on my page when trying to use the template.\nLuckily enough the JavaScript version of twig is…","fields":{"slug":"integrating-twig-js-and-bazingajstranslationbundle"},"frontmatter":{"date":"28 February, 2014","title":"Integrating Twig.js and BazingaJsTranslationBundle","tags":["php","symfony","javascript","translation","twig"],"header_img":{"publicURL":"/static/c55fd49a6826ee1cf2f5094c5c5970d2/integrating-twig-js-and-bazingajstranslationbundle.png"}}},{"timeToRead":4,"excerpt":"The Symfony2 security component has the fame of being one of the most complex in the framework. I tend to believe that’s partially true, not because the component is really that complex, but because there are (really) a lot of concepts involved and it may be difficult to understand them all at once and have a clear vision as a whole. I am in the process of writing an OAuth bundle and I faced the need to deeply understand how the authentication process work in Symfony2 to being able to integrate the OAuth…","fields":{"slug":"symfony-security-authentication-made-simple"},"frontmatter":{"date":"14 February, 2014","title":"Symfony security: authentication made simple (well, maybe!)","tags":["php","symfony","security"],"header_img":{"publicURL":"/static/a049b3af819a1ab8374e1dacde3d8e4f/symfony-security-authentication-made-simple.png"}}}],"tag":"symfony"}},"staticQueryHashes":[]}