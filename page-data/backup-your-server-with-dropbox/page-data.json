{"componentChunkName":"component---src-templates-blog-post-js","path":"/backup-your-server-with-dropbox/","result":{"data":{"site":{"siteMetadata":{"title":"Luciano Mammino \"Loige\" - Cloud developer, entrepreneur, fighter, butterfly maker!","author":"Luciano Mammino","siteUrl":"https://loige.co","twitterProfile":"loige","disqusShortName":"loige"}},"markdownRemark":{"id":"55b80480-2915-5c87-8483-aeee95d7d6cf","fileAbsolutePath":"/home/circleci/loige.co/content/posts/2014-01-17_backup-your-server-with-dropbox/index.md","excerpt":"In my early days as CTO at Sbaam I had to setup a web server from the ground up. As it happens in many startups the work had to be done…","timeToRead":5,"headings":[{"value":"Prepare the dropbox user","depth":2},{"value":"Install the dropbox client","depth":2},{"value":"Dropbox as a service","depth":2},{"value":"Enjoy","depth":2},{"value":"Bonus","depth":2}],"html":"<p>In my early days as <em>CTO</em> at <a href=\"http://sbaam.com\">Sbaam</a> I had to setup a web server from the ground up. As it happens in many startups the work had to be done quickly and with an <em>almost-0-budget</em>, so it left no space to sophisticated solutions for recurring tasks such as <strong>backup</strong>. I always have been a web developer and focused on coding so, I admit I had really a poor knowledge about how to setup a remote unix virtual machine.</p>\n<p>So, speaking about backups, I needed a solution that would be cost-effective, easy to install and easy to maintain at the same time. I would have loved it if it can be as simple as sharing a <a href=\"https://db.tt/ref37L7\">Dropbox</a> folder. As this thought crossed my mind I wondered if there was some way to interact with dropbox from a script to create files and folders and started googling about it. Luckily Dropbox offers a good command line client that allows to bring your synced files and folders also on graphic-less machines.</p>\n<p>Ultimately my solution was to install the Dropbox command line on the server using a dedicated Dropbox account and backup files by simply copying/linking them on the Dropbox folder. This way I prepared and scheduled a script that simply had to copy the files I wanted to backup on the dropbox folder. Then I have the files backupped in the cloud and automatically synced on my local machine. Furthermore i had chance to share the backup folder with all my collaborators.</p>\n<p>This solution works very well for small projects so I will resume all the steps I followed to install and use dropbox this way. I used an <em>ubuntu</em> machine so I suppose the following steps should work on debian machines.</p>\n<h2 id=\"prepare-the-dropbox-user\" style=\"position:relative;\"><a href=\"#prepare-the-dropbox-user\" aria-label=\"prepare the dropbox user permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prepare the dropbox user</h2>\n<p>I preferred to have a dedicated user to handle the whole Dropbox daemon and folder so just create it now:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">useradd</span> -d /dropbox -m dropbox</code></pre></div>\n<p>It will have the directory <code>/dropbox</code> as home and the name <code>dropbox</code>. You can change these values if you like.</p>\n<p>Then you have to set the password for the new user:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">passwd</span> dropbox</code></pre></div>\n<p>Choose whatever password you like.</p>\n<p><strong>Security concern:</strong> If you have ssh access enabled (obviously it is) it’s better to disable the ssh access for the new user. So edit the file <code>/etc/ssh/sshd_config</code> and add the rule <code>DenyUsers dropbox</code>, the restart ssh with <code>sudo service ssh restart</code>.</p>\n<h2 id=\"install-the-dropbox-client\" style=\"position:relative;\"><a href=\"#install-the-dropbox-client\" aria-label=\"install the dropbox client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install the dropbox client</h2>\n<p>First of all you need to switch to the user created in the previous step, so the Dropbox installer will create the Dropbox folder under its home. At the end you will have <code>/dropbox/Dropbox</code> as the synced folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">su</span> dropbox</code></pre></div>\n<p>(enter the password for the user dropbox)</p>\n<p>Now you’re the <em>dropbox</em> user. Be sure to switch to your user folder with <code>cd ~</code> and let’s download and install the daemon.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O dropbox.tar.gz <span class=\"token string\">\"http://www.dropbox.com/download/?plat=lnx.x86\"</span></code></pre></div>\n<p>for 32bit or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O dropbox.tar.gz <span class=\"token string\">\"http://www.dropbox.com/download/?plat=lnx.x86_64\"</span></code></pre></div>\n<p>for 64bit.</p>\n<p>Extract it:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -xvzf dropbox.tar.gz</code></pre></div>\n<p>It will extract to the <code>~/.dropbox-dist.</code> folder. Now run the client:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">~/.dropbox-dist/dropbox</code></pre></div>\n<p>You will see an output like the following:</p>\n<blockquote>\n<p>This client is not linked to any account…\nPlease visit {SOME_URL} to link this machine. […]</p>\n</blockquote>\n<p>Copy and paste the provided URL in the browser bar of your local machine and it will ask you to enter the password of your dropbox account. This way it is able to authenticate your command line client and start syncing your files. At this point it should have been started its work but our shell is still locked by the client. We need to kill and daemonize it to being able to manage it as a service. Press <code>CTRL+C</code> and get back to your user with the <code>exit</code> command.</p>\n<h2 id=\"dropbox-as-a-service\" style=\"position:relative;\"><a href=\"#dropbox-as-a-service\" aria-label=\"dropbox as a service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dropbox as a service</h2>\n<p>At this point we need to define dropbox as a service. So let’s create an <em>etc init script</em>. Download <a href=\"https://gist.github.com/lmammino/8467336\">my gist</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O dropbox_init_script <span class=\"token string\">\"https://gist.github.com/lmammino/8467336/raw/dropbox\"</span></code></pre></div>\n<p>and move it in the init folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> dropbox_init_script /etc/init.d/dropbox</code></pre></div>\n<p>Make it executable:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /etc/init.d/dropbox</code></pre></div>\n<p>And set it to load at startup:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> update-rc.d dropbox defaults</code></pre></div>\n<p>Now it’s a service! Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/dropbox start</code></pre></div>\n<p>to start it and feel free to use common service command such as <code>stop</code>, <code>restart</code> and <code>status</code>.</p>\n<h2 id=\"enjoy\" style=\"position:relative;\"><a href=\"#enjoy\" aria-label=\"enjoy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enjoy</h2>\n<p>At this point you have all your dropbox data in the <code>/dropbox/Dropbox</code> folder. Feel free to copy all the files you want in there or to schedule jobs that does all the dirty work for you. You can also create symlinks into the dropbox folder to keep files and folders placed in other locations synced.</p>\n<p><strong>Security concerns</strong>: consider that your dropbox folder acts as a normal dropbox folder so it’s synced both ways. If someone breaks into your dropbox account (or the account of some collaborator who shares the folder with you) he can use dropbox as an hole to inject malicious files into your server or steal sensible data. So, for example, avoid to have scheduled scripts and unencrypted sensible data in that folder.</p>\n<h2 id=\"bonus\" style=\"position:relative;\"><a href=\"#bonus\" aria-label=\"bonus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bonus</h2>\n<p>Dropbox released the <a href=\"https://www.dropbox.com/download?dl=packages/dropbox.py\">Dropbox CLI</a>, a python command line application that you can use to perform some useful task such as <em>Selective Sync</em>, disable the <em>LAN sync</em> or retrive public links of your files. I suggest to download it by using the dropbox user and place it under <code>/dropbox/bin</code>. So you can simply switch to the dropbox user (again with <code>su dropbox</code>), download it and make it executable:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/bin\n<span class=\"token function\">wget</span> -O ~/bin/dropbox.py <span class=\"token string\">\"https://www.dropbox.com/download?dl=packages/dropbox.py\"</span>\n<span class=\"token function\">chmod</span> +x ~/bin/dropbox.py</code></pre></div>\n<p>At this point you can run the Dropbox CLI. For example if you want to disable the LAN sync (heavily suggested in this case) you can simply do:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/dropbox/bin/dropbox.py lansync n</code></pre></div>\n<hr>\n<p>That’s all.\nIt was a long read but I hope it has been useful ;)</p>","frontmatter":{"title":"Backup your server with Dropbox","meta_description":null,"slug":"backup-your-server-with-dropbox","author":"Luciano Mammino","tags":["backup","dropbox","server"],"date":"January 17, 2014","dateISO":"2014-01-17T03:44:19.000Z","header_img":{"publicURL":"/static/92ceb80250d3fabde56c45cbbca9c2ca/backup-your-server-with-dropbox.png"},"fb_img":{"publicURL":"/static/c932bb3ef68b3b1e362250d6e8fb8120/backup-your-server-with-dropbox-fb.png"},"tw_img":{"publicURL":"/static/fd1a3da5957c60a82b4b523ccc7fb9f2/backup-your-server-with-dropbox-tw.png"}}}},"pageContext":{"tags":["backup","dropbox","server"],"slug":"backup-your-server-with-dropbox","previous":{"timeToRead":1,"excerpt":"Yep! Finally here’s the first post on the path of this blog. Finally/first, indeed a curious binomial with a weird sound, but I think it’s a good title to start this adventure.\nI’ll try to keep it simple and avoid to bloat things out… just start dancing by answering to a simple question, maybe the proper one now: Why start a blog?\nWell, I’m a web developer, fascinated by the web since I was a child and started writing my first lines of code in qbasic, and as any other serious web developer it happens to me…","fields":{"slug":"finally-first"},"frontmatter":{"date":"16 January, 2014","title":"Finally/First","tags":["life"],"header_img":{"publicURL":"/static/86737c5aac53f6339e09eef905a798ae/finally-first.png"}}},"next":{"timeToRead":2,"excerpt":"I recently wrote a new PHP library to simplify the extraction of user data (name, email, id, etc…) from various OAuth providers such as Facebook, Twitter and Linkedin. Is well know that OAuth 1 and 2 are great standard protocols to authenticate users in our apps. Anyway we often need to go further the authentication process and extract various information about the authenticated users. Unfortunately this is something that is not standardized and obviously each OAuth provider manages user data in very…","fields":{"slug":"new-php-library-php-oauth-user-data"},"frontmatter":{"date":"10 February, 2014","title":"New PHP library: PHPoAuthUserData","tags":["library","php","oauth","github"],"header_img":{"publicURL":"/static/ddcc163ff1c49cc9df72dc028b58e5a7/new-php-library-php-oauth-user-data.png"}}},"similar":[{"slug":"gulp-and-ftp-update-a-website-on-the-fly","title":"Gulp and FTP: update a website \"on the fly\"","publishedAt":"25 October, 2015","score":1},{"slug":"versioning-and-deploying-a-static-website-with-git-flightplan-and-nginx","title":"Versioning and deploying a static website with Git, Flightplan and Nginx","publishedAt":"08 September, 2015","score":1},{"slug":"simple-echo-server-written-in-go-dockerized","title":"Simple echo server written in Go, dockerized!","publishedAt":"29 June, 2014","score":1},{"slug":"reset-your-mysql-server-password","title":"Reset your MySql server password","publishedAt":"30 March, 2014","score":1}]}},"staticQueryHashes":[]}